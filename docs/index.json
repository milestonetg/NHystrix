{
  "api/NHystrix.HystrixEventType.html": {
    "href": "api/NHystrix.HystrixEventType.html",
    "title": "Class HystrixEventType | NHystrix",
    "keywords": "Class HystrixEventType Class HystrixEventType. This class cannot be inherited. Inheritance System.Object HystrixEventType Implements System.IEquatable < HystrixEventType > Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public sealed class HystrixEventType : IEquatable<HystrixEventType> Fields | Improve this Doc View Source BAD_REQUEST Declaration public static readonly HystrixEventType BAD_REQUEST Field Value Type Description HystrixEventType | Improve this Doc View Source CANCELLED Declaration public static readonly HystrixEventType CANCELLED Field Value Type Description HystrixEventType | Improve this Doc View Source COLLAPSED Declaration public static readonly HystrixEventType COLLAPSED Field Value Type Description HystrixEventType | Improve this Doc View Source COMMAND_MAX_ACTIVE Declaration public static readonly HystrixEventType COMMAND_MAX_ACTIVE Field Value Type Description HystrixEventType | Improve this Doc View Source EMIT Declaration public static readonly HystrixEventType EMIT Field Value Type Description HystrixEventType | Improve this Doc View Source EXCEPTION_THROWN Declaration public static readonly HystrixEventType EXCEPTION_THROWN Field Value Type Description HystrixEventType | Improve this Doc View Source FAILURE Declaration public static readonly HystrixEventType FAILURE Field Value Type Description HystrixEventType | Improve this Doc View Source FALLBACK_DISABLED Declaration public static readonly HystrixEventType FALLBACK_DISABLED Field Value Type Description HystrixEventType | Improve this Doc View Source FALLBACK_EMIT Declaration public static readonly HystrixEventType FALLBACK_EMIT Field Value Type Description HystrixEventType | Improve this Doc View Source FALLBACK_FAILURE Declaration public static readonly HystrixEventType FALLBACK_FAILURE Field Value Type Description HystrixEventType | Improve this Doc View Source FALLBACK_MISSING Declaration public static readonly HystrixEventType FALLBACK_MISSING Field Value Type Description HystrixEventType | Improve this Doc View Source FALLBACK_REJECTION Declaration public static readonly HystrixEventType FALLBACK_REJECTION Field Value Type Description HystrixEventType | Improve this Doc View Source FALLBACK_SUCCESS Declaration public static readonly HystrixEventType FALLBACK_SUCCESS Field Value Type Description HystrixEventType | Improve this Doc View Source RESPONSE_FROM_CACHE Declaration public static readonly HystrixEventType RESPONSE_FROM_CACHE Field Value Type Description HystrixEventType | Improve this Doc View Source SEMAPHORE_REJECTED The maximum number of bulkheading semaphores is reached and a semaphore could not be acquired. Declaration public static readonly HystrixEventType SEMAPHORE_REJECTED Field Value Type Description HystrixEventType | Improve this Doc View Source SHORT_CIRCUITED The circuit breaker is open, so the command was short circuited. Declaration public static readonly HystrixEventType SHORT_CIRCUITED Field Value Type Description HystrixEventType | Improve this Doc View Source SUCCESS Declaration public static readonly HystrixEventType SUCCESS Field Value Type Description HystrixEventType | Improve this Doc View Source THREAD_POOL_REJECTED Declaration public static readonly HystrixEventType THREAD_POOL_REJECTED Field Value Type Description HystrixEventType | Improve this Doc View Source TIMEOUT Declaration public static readonly HystrixEventType TIMEOUT Field Value Type Description HystrixEventType Properties | Improve this Doc View Source IsTerminal Gets a value indicating whether this instance is terminal. Declaration public bool IsTerminal { get; } Property Value Type Description System.Boolean true if this instance is terminal; otherwise, false . | Improve this Doc View Source Value Gets the value. Declaration public short Value { get; } Property Value Type Description System.Int16 The value. Methods | Improve this Doc View Source Equals(HystrixEventType) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(HystrixEventType other) Parameters Type Name Description HystrixEventType other An object to compare with this object. Returns Type Description System.Boolean true if the current object is equal to the other parameter; otherwise, false. | Improve this Doc View Source Equals(Object) Determines whether the specified System.Object is equal to this instance. Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj The object to compare with the current object. Returns Type Description System.Boolean true if the specified System.Object is equal to this instance; otherwise, false . Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description System.Int32 A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides System.Object.GetHashCode() Implements System.IEquatable<T> See Also System.IEquatable <T>"
  },
  "api/NHystrix.HystrixCommandKey.html": {
    "href": "api/NHystrix.HystrixCommandKey.html",
    "title": "Struct HystrixCommandKey | NHystrix",
    "keywords": "Struct HystrixCommandKey A HystrixCommandKey is used to identify a specific command within a group. This key is used as the caching key for metrics, etc. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : NHystrix Assembly : NHystrix.dll Syntax public struct HystrixCommandKey Constructors | Improve this Doc View Source HystrixCommandKey(String, HystrixCommandGroup) Initializes a new instance of the HystrixCommandKey struct. Declaration public HystrixCommandKey(string name, HystrixCommandGroup group) Parameters Type Name Description System.String name The name of this command. HystrixCommandGroup group The HystrixCommandGroup to which this command belongs. Exceptions Type Condition System.ArgumentException Invalid argument. name cannot be null or empty. - name Properties | Improve this Doc View Source Group Gets the group. Declaration public HystrixCommandGroup Group { get; } Property Value Type Description HystrixCommandGroup The group. | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description System.String The name. Methods | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String A System.String that represents this instance. Overrides System.ValueType.ToString()"
  },
  "api/NHystrix.HystrixCommandGroup.html": {
    "href": "api/NHystrix.HystrixCommandGroup.html",
    "title": "Struct HystrixCommandGroup | NHystrix",
    "keywords": "Struct HystrixCommandGroup A HystrixCommandGroup is used to group commands together. For example, by service or resource. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : NHystrix Assembly : NHystrix.dll Syntax public struct HystrixCommandGroup Constructors | Improve this Doc View Source HystrixCommandGroup(String) Initializes a new instance of the HystrixCommandGroup struct. Declaration public HystrixCommandGroup(string name) Parameters Type Name Description System.String name The name. Properties | Improve this Doc View Source CommandKeys Gets the command keys. Declaration public IReadOnlyCollection<HystrixCommandKey> CommandKeys { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < HystrixCommandKey > The command keys. | Improve this Doc View Source Name Gets or sets the name. Declaration public string Name { get; set; } Property Value Type Description System.String The name. Methods | Improve this Doc View Source AddCommandKey(String) Creates a new HystrixCommandKey with the specified name and adds it to this group. Declaration public HystrixCommandKey AddCommandKey(string commandKeyName) Parameters Type Name Description System.String commandKeyName Name of the command key. Returns Type Description HystrixCommandKey The new HystrixCommandKey . | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString()"
  },
  "api/NHystrix.Metric.html": {
    "href": "api/NHystrix.Metric.html",
    "title": "Namespace NHystrix.Metric | NHystrix",
    "keywords": "Namespace NHystrix.Metric Classes HystrixCommandEvent Encapsulates and event that occurred as a result of executing a HystrixCommand<TResult> . HystrixCommandEventStream Per-Command stream of s. HystrixRollingNumber A number which can be used to track counters (increment) or set values over time. It is \"rolling\" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch. This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals(or whatever granularity is defined by the arguments) rather than each 10 second window starting at 0 again. Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second). For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it. See UnitTest for usage and expected behavior examples. Interfaces IHystrixEvent Marker interface for events which may appear in an event stream IHystrixEventStream<E> Interface implemented by all event streams"
  },
  "api/NHystrix.Metric.HystrixRollingNumber.html": {
    "href": "api/NHystrix.Metric.HystrixRollingNumber.html",
    "title": "Class HystrixRollingNumber | NHystrix",
    "keywords": "Class HystrixRollingNumber A number which can be used to track counters (increment) or set values over time. It is \"rolling\" in the sense that a 'timeInMilliseconds' is given that you want to track (such as 10 seconds) and then that is broken into buckets (defaults to 10) so that the 10 second window doesn't empty out and restart every 10 seconds, but instead every 1 second you have a new bucket added and one dropped so that 9 of the buckets remain and only the newest starts from scratch. This is done so that the statistics are gathered over a rolling 10 second window with data being added/dropped in 1 second intervals(or whatever granularity is defined by the arguments) rather than each 10 second window starting at 0 again. Performance-wise this class is optimized for writes, not reads. This is done because it expects far higher write volume (thousands/second) than reads (a few per second). For example, on each read to getSum/getCount it will iterate buckets to sum the data so that on writes we don't need to maintain the overall sum and pay the synchronization cost at each write to ensure the sum is up-to-date when the read can easily iterate each bucket to get the sum when it needs it. See UnitTest for usage and expected behavior examples. Inheritance System.Object HystrixRollingNumber Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix.Metric Assembly : NHystrix.dll Syntax public class HystrixRollingNumber Remarks Thread Safety This class is thread-safe. Constructors | Improve this Doc View Source HystrixRollingNumber(Int32, Int32) Initializes a new instance of the HystrixRollingNumber class. Declaration public HystrixRollingNumber(int timeInMilliseconds, int numberOfBuckets) Parameters Type Name Description System.Int32 timeInMilliseconds Length of time in milliseconds to report metrics over. System.Int32 numberOfBuckets The number of buckets. Methods | Improve this Doc View Source Add(HystrixEventType, Int64) Adds to the counter for the specified HystrixEventType . Declaration public void Add(HystrixEventType eventType, long value) Parameters Type Name Description HystrixEventType eventType Type of the event. System.Int64 value The value. | Improve this Doc View Source GetCumulativeSum(HystrixEventType) Get the cumulative sum of all buckets ever since the JVM started without rolling for the given HystrixEventType . Declaration public long GetCumulativeSum(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. Returns Type Description System.Int64 System.Int64. | Improve this Doc View Source GetRollingMaxValue(HystrixEventType) Get the max value of values in all buckets for the given HystrixEventType . Declaration public long GetRollingMaxValue(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. Returns Type Description System.Int64 System.Int64. Exceptions Type Condition System.NotImplementedException | Improve this Doc View Source GetRollingSum(HystrixEventType) Get the sum of all buckets in the rolling counter for the given HystrixEventType . Declaration public long GetRollingSum(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. Returns Type Description System.Int64 System.Int64. | Improve this Doc View Source GetValueOfLatestBucket(HystrixEventType) Get the value of the latest (current) bucket in the rolling counter for the given HystrixEventType . Declaration public long GetValueOfLatestBucket(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. Returns Type Description System.Int64 System.Int64. | Improve this Doc View Source GetValues(HystrixEventType) Get an array of values for all buckets in the rolling counter for the given HystrixEventType . Declaration public long[] GetValues(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. Returns Type Description System.Int64 [] System.Int64[]. | Improve this Doc View Source Increment(HystrixEventType) Increments the counter for the specified HystrixEventType . Declaration public void Increment(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. | Improve this Doc View Source Reset() Force a reset of all rolling counters (clear all buckets) so that statistics start being gathered from scratch. This does NOT reset the CumulativeSum values. Declaration public void Reset() | Improve this Doc View Source UpdateRollingMax(HystrixEventType, Int64) Update a value and retain the max value for the specified HystrixEventType . Declaration public void UpdateRollingMax(HystrixEventType eventType, long value) Parameters Type Name Description HystrixEventType eventType Type of the event. System.Int64 value The value. Exceptions Type Condition System.NotImplementedException"
  },
  "api/NHystrix.IHystrixCommand-1.html": {
    "href": "api/NHystrix.IHystrixCommand-1.html",
    "title": "Interface IHystrixCommand<TResult> | NHystrix",
    "keywords": "Interface IHystrixCommand<TResult> Interface implemented by HystrixCommand<TResult> s. Namespace : NHystrix Assembly : NHystrix.dll Syntax public interface IHystrixCommand<TResult> Type Parameters Name Description TResult The type of the t result. Methods | Improve this Doc View Source ExecuteAsync() Executes the command. Declaration Task<TResult> ExecuteAsync() Returns Type Description System.Threading.Tasks.Task <TResult> Task<TResult>."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | NHystrix",
    "keywords": "Add your introductions here!"
  },
  "api/NHystrix.Metric.IHystrixEventStream-1.html": {
    "href": "api/NHystrix.Metric.IHystrixEventStream-1.html",
    "title": "Interface IHystrixEventStream<E> | NHystrix",
    "keywords": "Interface IHystrixEventStream<E> Interface implemented by all event streams Namespace : NHystrix.Metric Assembly : NHystrix.dll Syntax public interface IHystrixEventStream<E> where E : IHystrixEvent Type Parameters Name Description E Methods | Improve this Doc View Source Observe() Returns an System.IObservable<T> for subscribing to the event stream. Declaration IObservable<E> Observe() Returns Type Description System.IObservable <E> IObservable<E>."
  },
  "api/NHystrix.HystrixCommand-1.html": {
    "href": "api/NHystrix.HystrixCommand-1.html",
    "title": "Class HystrixCommand<TResult> | NHystrix",
    "keywords": "Class HystrixCommand<TResult> Base class for all HystrixCommands. Providing functionality for: Bulkheading Timeout Circuit Breaker Request Caching Request Logging Fallback responses Inheritance System.Object HystrixCommand<TResult> Implements IHystrixCommand <TResult> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public abstract class HystrixCommand<TResult> : IHystrixCommand<TResult> Type Parameters Name Description TResult The type of the result. Constructors | Improve this Doc View Source HystrixCommand(HystrixCommandKey, HystrixCommandProperties) Initializes a new instance of the HystrixCommand<TResult> class. Declaration protected HystrixCommand(HystrixCommandKey commandKey, HystrixCommandProperties properties) Parameters Type Name Description HystrixCommandKey commandKey The command key. HystrixCommandProperties properties The properties. Properties | Improve this Doc View Source CommandKey Gets the command key. Declaration public HystrixCommandKey CommandKey { get; } Property Value Type Description HystrixCommandKey The command key. Methods | Improve this Doc View Source ExecuteAsync() Executes the command. Declaration public Task<TResult> ExecuteAsync() Returns Type Description System.Threading.Tasks.Task <TResult> Task<TResult>. | Improve this Doc View Source OnHandleFallback() When overridden in a derived class, returns the fallback response when fallback is enabled. Declaration protected virtual TResult OnHandleFallback() Returns Type Description TResult The fallback response for the command. Exceptions Type Condition System.NotImplementedException | Improve this Doc View Source RunAsync() Implements the logic to perform when ExecuteAsync() is called. Declaration protected abstract Task<TResult> RunAsync() Returns Type Description System.Threading.Tasks.Task <TResult> Task<TResult>. Implements IHystrixCommand<TResult> See Also IHystrixCommand <TResult>"
  },
  "api/NHystrix.TaskExtensions.html": {
    "href": "api/NHystrix.TaskExtensions.html",
    "title": "Class TaskExtensions | NHystrix",
    "keywords": "Class TaskExtensions Inheritance System.Object TaskExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public static class TaskExtensions Methods | Improve this Doc View Source WithTimeout<TResult>(Task<TResult>, Int32) Declaration public static Task<TResult> WithTimeout<TResult>(this Task<TResult> task, int timeoutInMilliseconds) Parameters Type Name Description System.Threading.Tasks.Task <TResult> task System.Int32 timeoutInMilliseconds Returns Type Description System.Threading.Tasks.Task <TResult> Type Parameters Name Description TResult"
  },
  "api/NHystrix.Metric.IHystrixEvent.html": {
    "href": "api/NHystrix.Metric.IHystrixEvent.html",
    "title": "Interface IHystrixEvent | NHystrix",
    "keywords": "Interface IHystrixEvent Marker interface for events which may appear in an event stream Namespace : NHystrix.Metric Assembly : NHystrix.dll Syntax public interface IHystrixEvent"
  },
  "api/NHystrix.Metric.HystrixCommandEvent.html": {
    "href": "api/NHystrix.Metric.HystrixCommandEvent.html",
    "title": "Class HystrixCommandEvent | NHystrix",
    "keywords": "Class HystrixCommandEvent Encapsulates and event that occurred as a result of executing a HystrixCommand<TResult> . Inheritance System.Object HystrixCommandEvent Implements IHystrixEvent Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix.Metric Assembly : NHystrix.dll Syntax public class HystrixCommandEvent : IHystrixEvent Constructors | Improve this Doc View Source HystrixCommandEvent(HystrixCommandKey, HystrixEventType, Exception) Initializes a new instance of the HystrixCommandEvent class. Declaration public HystrixCommandEvent(HystrixCommandKey commandKey, HystrixEventType eventType, Exception exception = null) Parameters Type Name Description HystrixCommandKey commandKey The command key. HystrixEventType eventType Type of the event. System.Exception exception The exception. (optional) Properties | Improve this Doc View Source CommandKey Gets the command key. Declaration public HystrixCommandKey CommandKey { get; } Property Value Type Description HystrixCommandKey The command key. | Improve this Doc View Source EventType Gets the type of the event. Declaration public HystrixEventType EventType { get; } Property Value Type Description HystrixEventType The type of the event. | Improve this Doc View Source Exception Gets the exception. Declaration public Exception Exception { get; } Property Value Type Description System.Exception The exception. Null if no exception occurred. Implements IHystrixEvent See Also IHystrixEvent"
  },
  "api/NHystrix.HystrixMetrics.html": {
    "href": "api/NHystrix.HystrixMetrics.html",
    "title": "Class HystrixMetrics | NHystrix",
    "keywords": "Class HystrixMetrics Inheritance System.Object HystrixMetrics HystrixCommandMetrics Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public abstract class HystrixMetrics Constructors | Improve this Doc View Source HystrixMetrics(HystrixRollingNumber) Declaration protected HystrixMetrics(HystrixRollingNumber counter) Parameters Type Name Description HystrixRollingNumber counter Fields | Improve this Doc View Source counter Declaration protected readonly HystrixRollingNumber counter Field Value Type Description HystrixRollingNumber Methods | Improve this Doc View Source GetCumulativeCount(HystrixEventType) Get the cumulative count since the start of the application for the given HystrixEventType Declaration public long GetCumulativeCount(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. Returns Type Description System.Int64 long cumulative count | Improve this Doc View Source getRollingCount(HystrixEventType) Get the rolling count for the given HystrixEventType . Declaration public long getRollingCount(HystrixEventType eventType) Parameters Type Name Description HystrixEventType eventType Type of the event. Returns Type Description System.Int64 long rolling count"
  },
  "api/NHystrix.HystrixCommandMetrics.html": {
    "href": "api/NHystrix.HystrixCommandMetrics.html",
    "title": "Class HystrixCommandMetrics | NHystrix",
    "keywords": "Class HystrixCommandMetrics Inheritance System.Object HystrixMetrics HystrixCommandMetrics Inherited Members HystrixMetrics.counter HystrixMetrics.GetCumulativeCount(HystrixEventType) HystrixMetrics.getRollingCount(HystrixEventType) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public class HystrixCommandMetrics : HystrixMetrics Properties | Improve this Doc View Source CommandGroup Declaration public HystrixCommandGroup CommandGroup { get; } Property Value Type Description HystrixCommandGroup | Improve this Doc View Source CommandKey Declaration public HystrixCommandKey CommandKey { get; } Property Value Type Description HystrixCommandKey Methods | Improve this Doc View Source GetInstance(HystrixCommandKey, HystrixCommandProperties) Declaration public static HystrixCommandMetrics GetInstance(HystrixCommandKey commandKey, HystrixCommandProperties properties) Parameters Type Name Description HystrixCommandKey commandKey HystrixCommandProperties properties Returns Type Description HystrixCommandMetrics"
  },
  "api/NHystrix.Metric.HystrixCommandEventStream.html": {
    "href": "api/NHystrix.Metric.HystrixCommandEventStream.html",
    "title": "Class HystrixCommandEventStream | NHystrix",
    "keywords": "Class HystrixCommandEventStream Per-Command stream of s. Inheritance System.Object HystrixCommandEventStream Implements IHystrixEventStream < HystrixCommandEvent > Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : NHystrix.Metric Assembly : NHystrix.dll Syntax public class HystrixCommandEventStream : IHystrixEventStream<HystrixCommandEvent> Properties | Improve this Doc View Source CommandKey Gets the command key. Declaration public HystrixCommandKey CommandKey { get; } Property Value Type Description HystrixCommandKey The command key. Methods | Improve this Doc View Source GetInstance(HystrixCommandKey) Gets a Singleton instance for the specified commandKey . Declaration public static HystrixCommandEventStream GetInstance(HystrixCommandKey commandKey) Parameters Type Name Description HystrixCommandKey commandKey The command key. Returns Type Description HystrixCommandEventStream HystrixCommandStartStream. Remarks This is thread-safe and ensures only 1 HystrixCommandEventStream per commandKey . Exceptions Type Condition System.Collections.Generic.KeyNotFoundException If an instance for commandKey could not be found and one could not be created. In theory, this should never get thrown. | Improve this Doc View Source Observe() Returns an System.IObservable<T> for subscribing to the event stream. Declaration public IObservable<HystrixCommandEvent> Observe() Returns Type Description System.IObservable < HystrixCommandEvent > IObservable<HystrixCommandExecutionStarted>. | Improve this Doc View Source Reset() Completes each interned stream and, clears the interned streams dictionary. Declaration public static void Reset() | Improve this Doc View Source ToString() Returns a System.String that represents this instance. Declaration public override string ToString() Returns Type Description System.String The name of the scream and CommandKey it's for in the form of \"HystrixCommandStartStream({CommandKey})\". Overrides System.Object.ToString() | Improve this Doc View Source Write(HystrixCommandEvent) Writes the specified hystrix event. Declaration public void Write(HystrixCommandEvent hystrixEvent) Parameters Type Name Description HystrixCommandEvent hystrixEvent The hystrix event. Implements IHystrixEventStream<E> See Also IHystrixEventStream <E>"
  },
  "api/NHystrix.IHystrixCircuitBreaker.html": {
    "href": "api/NHystrix.IHystrixCircuitBreaker.html",
    "title": "Interface IHystrixCircuitBreaker | NHystrix",
    "keywords": "Interface IHystrixCircuitBreaker Circuit-breaker logic that is hooked into HystrixCommand<TResult> execution and will stop allowing executions if failures have gone past the defined threshold. The default (and only) implementation will then allow a single retry after a defined sleepWindow until the execution succeeds at which point it will again close the circuit and allow executions again. Namespace : NHystrix Assembly : NHystrix.dll Syntax public interface IHystrixCircuitBreaker Properties | Improve this Doc View Source IsOpen Whether the circuit is currently open (tripped). Declaration bool IsOpen { get; } Property Value Type Description System.Boolean boolean state of circuit breaker | Improve this Doc View Source ShouldAllowRequest Every HystrixCommand<TResult> request asks this if it is allowed to proceed or not. It is idempotent and does not modify any internal state, and takes into account the half-open logic which allows some requests through after the circuit has been opened Declaration bool ShouldAllowRequest { get; } Property Value Type Description System.Boolean boolean whether a request should be permitted | Improve this Doc View Source ShouldAttemptExecution Invoked at start of command execution to attempt an execution. This is non-idempotent - it may modify internal state. Declaration bool ShouldAttemptExecution { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source MarkNonSuccess() Invoked on unsuccessful executions from HystrixCommand<TResult> as part of feedback mechanism when in a half-open state. Declaration void MarkNonSuccess() | Improve this Doc View Source MarkSuccess() Invoked on successful executions from HystrixCommand<TResult> as part of feedback mechanism when in a half-open state. Declaration void MarkSuccess()"
  },
  "api/NHystrix.HystrixDelegatingHandler.html": {
    "href": "api/NHystrix.HystrixDelegatingHandler.html",
    "title": "Class HystrixDelegatingHandler | NHystrix",
    "keywords": "Class HystrixDelegatingHandler Inheritance System.Object System.Net.Http.HttpMessageHandler System.Net.Http.DelegatingHandler HystrixDelegatingHandler Implements System.IDisposable Inherited Members System.Net.Http.DelegatingHandler.Dispose(System.Boolean) System.Net.Http.DelegatingHandler.InnerHandler System.Net.Http.HttpMessageHandler.Dispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public class HystrixDelegatingHandler : DelegatingHandler, IDisposable Constructors | Improve this Doc View Source HystrixDelegatingHandler(HystrixCommandProperties, HttpMessageHandler) Declaration public HystrixDelegatingHandler(HystrixCommandProperties properties, HttpMessageHandler innerHandler) Parameters Type Name Description HystrixCommandProperties properties System.Net.Http.HttpMessageHandler innerHandler Methods | Improve this Doc View Source SendAsync(HttpRequestMessage, CancellationToken) Declaration protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters Type Name Description System.Net.Http.HttpRequestMessage request System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Net.Http.HttpResponseMessage > Overrides System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage, System.Threading.CancellationToken) Implements System.IDisposable"
  },
  "api/NHystrix.HystrixCircuitBreaker.html": {
    "href": "api/NHystrix.HystrixCircuitBreaker.html",
    "title": "Class HystrixCircuitBreaker | NHystrix",
    "keywords": "Class HystrixCircuitBreaker The default production implementation of IHystrixCircuitBreaker . Inheritance System.Object HystrixCircuitBreaker Implements IHystrixCircuitBreaker Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public class HystrixCircuitBreaker : IHystrixCircuitBreaker Properties | Improve this Doc View Source IsOpen Whether the circuit is currently open (tripped). Declaration public bool IsOpen { get; } Property Value Type Description System.Boolean true if the circuit breaker is open, false otherwise. | Improve this Doc View Source ShouldAllowRequest Every HystrixCommand<TResult> requests asks this if it is allowed to proceed or not. It is idempotent and does not modify any internal state, and takes into account the half-open logic which allows some requests through after the circuit has been opened. Declaration public bool ShouldAllowRequest { get; } Property Value Type Description System.Boolean true if the request should be allowed, false otherwise. | Improve this Doc View Source ShouldAttemptExecution Invoked at start of command execution to attempt an execution. This is non-idempotent - it may modify internal state. Declaration public bool ShouldAttemptExecution { get; } Property Value Type Description System.Boolean true if execution can be attempted, false otherwise. Methods | Improve this Doc View Source GetInstance(HystrixCommandKey, HystrixCommandProperties, HystrixCommandMetrics) Get the IHystrixCircuitBreaker instance for a given key. Declaration public static IHystrixCircuitBreaker GetInstance(HystrixCommandKey commandKey, HystrixCommandProperties properties, HystrixCommandMetrics metrics) Parameters Type Name Description HystrixCommandKey commandKey The HystrixCommandKey for the command using this circuit breaker. HystrixCommandProperties properties The HystrixCommandProperties for the command using this circuit breaker. HystrixCommandMetrics metrics The HystrixCommandMetrics for the command using this circuit breaker. Returns Type Description IHystrixCircuitBreaker A singleton instance of IHystrixCircuitBreaker for the given HystrixCommandKey | Improve this Doc View Source MarkNonSuccess() Invoked on unsuccessful executions from HystrixCommand<TResult> as part of feedback mechanism when in a half-open state. Declaration public void MarkNonSuccess() | Improve this Doc View Source MarkSuccess() Invoked on successful executions from HystrixCommand<TResult> as part of feedback mechanism when in a half-open state. Declaration public void MarkSuccess() Implements IHystrixCircuitBreaker See Also IHystrixCircuitBreaker"
  },
  "api/NHystrix.html": {
    "href": "api/NHystrix.html",
    "title": "Namespace NHystrix | NHystrix",
    "keywords": "Namespace NHystrix Classes HystrixCircuitBreaker The default production implementation of IHystrixCircuitBreaker . HystrixCommand<TResult> Base class for all HystrixCommands. Providing functionality for: Bulkheading Timeout Circuit Breaker Request Caching Request Logging Fallback responses HystrixCommandMetrics HystrixCommandProperties Configuration properties for HystrixCommand<TResult> and related components. HystrixDelegatingHandler HystrixEventType Class HystrixEventType. This class cannot be inherited. HystrixMetrics TaskExtensions Structs HystrixCommandGroup A HystrixCommandGroup is used to group commands together. For example, by service or resource. HystrixCommandKey A HystrixCommandKey is used to identify a specific command within a group. This key is used as the caching key for metrics, etc. Interfaces IHystrixCircuitBreaker Circuit-breaker logic that is hooked into HystrixCommand<TResult> execution and will stop allowing executions if failures have gone past the defined threshold. The default (and only) implementation will then allow a single retry after a defined sleepWindow until the execution succeeds at which point it will again close the circuit and allow executions again. IHystrixCommand<TResult> Interface implemented by HystrixCommand<TResult> s."
  },
  "api/NHystrix.HystrixCommandProperties.html": {
    "href": "api/NHystrix.HystrixCommandProperties.html",
    "title": "Class HystrixCommandProperties | NHystrix",
    "keywords": "Class HystrixCommandProperties Configuration properties for HystrixCommand<TResult> and related components. Inheritance System.Object HystrixCommandProperties Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : NHystrix Assembly : NHystrix.dll Syntax public class HystrixCommandProperties Properties | Improve this Doc View Source BulkheadingEnabled Gets or sets a value indicating whether [bulkheading enabled]. Declaration public bool BulkheadingEnabled { get; set; } Property Value Type Description System.Boolean true if [bulkheading enabled]; otherwise, false . Default is true. | Improve this Doc View Source BulkheadSemaphoreAcquireTimeoutInMilliseconds The amount of time bulkheading should wait to acquire a semaphore, in milliseconds, before returning any fallback responses. Declaration public int BulkheadSemaphoreAcquireTimeoutInMilliseconds { get; set; } Property Value Type Description System.Int32 The bulkhead semaphore acquire timeout in milliseconds. Default is 1. | Improve this Doc View Source CircuitBreakerEnabled Gets or sets a value indicating whether [circuit breaker enabled]. Declaration public bool CircuitBreakerEnabled { get; set; } Property Value Type Description System.Boolean true if [circuit breaker enabled]; otherwise, false . Default is true. | Improve this Doc View Source CircuitBreakerErrorThresholdPercentage Gets or sets the circuit breaker error threshold percentage. Declaration public int CircuitBreakerErrorThresholdPercentage { get; set; } Property Value Type Description System.Int32 The circuit breaker error threshold percentage. Default is 50. | Improve this Doc View Source CircuitBreakerForceClosed Gets or sets a value indicating whether [circuit breaker force closed]. Declaration public bool CircuitBreakerForceClosed { get; set; } Property Value Type Description System.Boolean true if [circuit breaker force closed]; otherwise, false . Default is false. | Improve this Doc View Source CircuitBreakerForceOpen Gets or sets a value indicating whether [circuit breaker force open]. Declaration public bool CircuitBreakerForceOpen { get; set; } Property Value Type Description System.Boolean true if [circuit breaker force open]; otherwise, false . Default is false. | Improve this Doc View Source CircuitBreakerRequestVolumeThreshold Number of requests that must be made within a statisticalWindow before open/close decisions are made using stats Declaration public int CircuitBreakerRequestVolumeThreshold { get; set; } Property Value Type Description System.Int32 The circuit breaker request volume threshold. Default is 20. | Improve this Doc View Source CircuitBreakerSleepWindowInMilliseconds Gets or sets the circuit breaker sleep window in milliseconds. Declaration public long CircuitBreakerSleepWindowInMilliseconds { get; set; } Property Value Type Description System.Int64 The circuit breaker sleep window in milliseconds. Default is 5000. | Improve this Doc View Source ExecutionTimeoutInMilliseconds Gets or sets the execution timeout in milliseconds. Declaration public int ExecutionTimeoutInMilliseconds { get; set; } Property Value Type Description System.Int32 The execution timeout in milliseconds. Default is 1000. | Improve this Doc View Source FallbackEnabled Gets or sets a value indicating whether [fallback enabled]. Declaration public bool FallbackEnabled { get; set; } Property Value Type Description System.Boolean true if [fallback enabled]; otherwise, false . Default is false. | Improve this Doc View Source MaxConcurrentRequests Gets or sets the maximum concurrent requests. Declaration public int MaxConcurrentRequests { get; set; } Property Value Type Description System.Int32 The maximum concurrent requests. Default is 10. | Improve this Doc View Source MetricsRollingStatisticalWindowBuckets Gets or sets the metrics rolling statistical window buckets. Declaration public int MetricsRollingStatisticalWindowBuckets { get; set; } Property Value Type Description System.Int32 The metrics rolling statistical window buckets. Default is 10. | Improve this Doc View Source MetricsRollingStatisticalWindowInMilliseconds Gets or sets the metrics rolling statistical window in milliseconds. Declaration public int MetricsRollingStatisticalWindowInMilliseconds { get; set; } Property Value Type Description System.Int32 The metrics rolling statistical window in milliseconds. Default is 1000. | Improve this Doc View Source TimeoutEnabled Whether timeout should be triggered Declaration public bool TimeoutEnabled { get; set; } Property Value Type Description System.Boolean true if [timeout enabled]; otherwise, false . Default is true."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API Documentation | NHystrix",
    "keywords": "API Documentation"
  },
  "index.html": {
    "href": "index.html",
    "title": "NHystrix | NHystrix",
    "keywords": "NHystrix What is NHystrix NHystrix is inspired by the Netflix/Hystrix project to provide similar functionality and resilience to C#/.Net based services and clients. The Hystrix Wiki is worth a read to understand what challenges N/Hystrix aims to solve. What it is NOT Due to language differences and feature differences between Java and C#/.Net, this is NOT a direct port. If you are familiar with Hystrix, you'll recognize similarities in API and structure, but also see that NHystrix arrives at the end goal a bit differently. Quick Start Install the NuGet package to your project Packages can be found at: https://www.nuget.org/packages/NHystrix/ Powershell CLI Install-Package NHystrix dotnet add package NHystrix Create a command class public class GreeterCommand : HystrixCommand<string> { string greeter; public GreeterCommand(string greeter, HystrixCommandProperties properties) : base(new HystrixCommandKey(\"Test\", new HystrixCommandGroup(\"TestGroup\")), properties) { this.greeter = greeter; } protected override Task<string> RunAsync() { return Task.FromResult($\"Hello, {greeter}!\"); } protected override string OnHandleFallback() { return \"Hello World!\"; } } Execute your command var properties = new HystrixCommandProperties() { FallbackEnabled = true }; var cmd = new GreeterCommand(\"Bob\", properties); string s = await cmd.ExecuteAsync() Output: Hello, Bob!"
  }
}