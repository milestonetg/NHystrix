### YamlMime:ManagedReference
items:
- uid: NHystrix.HealthCounts
  commentId: T:NHystrix.HealthCounts
  id: HealthCounts
  parent: NHystrix
  children:
  - NHystrix.HealthCounts.FailedRequestCount
  - NHystrix.HealthCounts.FailurePercentage
  - NHystrix.HealthCounts.RequestCount
  langs:
  - csharp
  - vb
  name: HealthCounts
  nameWithType: HealthCounts
  fullName: NHystrix.HealthCounts
  type: Class
  source:
    remote:
      path: src/NHystrix/HealthCounts.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: HealthCounts
    path: ../src/NHystrix/HealthCounts.cs
    startLine: 9
  assemblies:
  - NHystrix
  namespace: NHystrix
  summary: "\nEncapsulates health related statistics sent to the HealthStream of a HystrixCommandMetric.\n"
  example: []
  syntax:
    content: public class HealthCounts
    content.vb: Public Class HealthCounts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NHystrix.HealthCounts.RequestCount
  commentId: P:NHystrix.HealthCounts.RequestCount
  id: RequestCount
  parent: NHystrix.HealthCounts
  langs:
  - csharp
  - vb
  name: RequestCount
  nameWithType: HealthCounts.RequestCount
  fullName: NHystrix.HealthCounts.RequestCount
  type: Property
  source:
    remote:
      path: src/NHystrix/HealthCounts.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: RequestCount
    path: ../src/NHystrix/HealthCounts.cs
    startLine: 21
  assemblies:
  - NHystrix
  namespace: NHystrix
  summary: "\nThe total number of attempted requests within the reporting window.\n"
  remarks: "\nIn the <xref href=\"NHystrix.HystrixCircuitBreaker\" data-throw-if-not-resolved=\"false\"></xref>, this is the value\ncompared to the <xref href=\"NHystrix.CircuitBreakerOptions.CircuitBreakerRequestVolumeThreshold\" data-throw-if-not-resolved=\"false\"></xref>\nto ensure we&apos;ve met the minimum number of requests before evaluating\nthe failure percentage.\n"
  example: []
  syntax:
    content: public long RequestCount { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The request count.
    content.vb: Public Property RequestCount As Long
  overload: NHystrix.HealthCounts.RequestCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NHystrix.HealthCounts.FailedRequestCount
  commentId: P:NHystrix.HealthCounts.FailedRequestCount
  id: FailedRequestCount
  parent: NHystrix.HealthCounts
  langs:
  - csharp
  - vb
  name: FailedRequestCount
  nameWithType: HealthCounts.FailedRequestCount
  fullName: NHystrix.HealthCounts.FailedRequestCount
  type: Property
  source:
    remote:
      path: src/NHystrix/HealthCounts.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: FailedRequestCount
    path: ../src/NHystrix/HealthCounts.cs
    startLine: 27
  assemblies:
  - NHystrix
  namespace: NHystrix
  summary: "\nThe number of failed requests within the reporting window.\n"
  example: []
  syntax:
    content: public long FailedRequestCount { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The failed request count.
    content.vb: Public Property FailedRequestCount As Long
  overload: NHystrix.HealthCounts.FailedRequestCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: NHystrix.HealthCounts.FailurePercentage
  commentId: P:NHystrix.HealthCounts.FailurePercentage
  id: FailurePercentage
  parent: NHystrix.HealthCounts
  langs:
  - csharp
  - vb
  name: FailurePercentage
  nameWithType: HealthCounts.FailurePercentage
  fullName: NHystrix.HealthCounts.FailurePercentage
  type: Property
  source:
    remote:
      path: src/NHystrix/HealthCounts.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: FailurePercentage
    path: ../src/NHystrix/HealthCounts.cs
    startLine: 38
  assemblies:
  - NHystrix
  namespace: NHystrix
  summary: "\nThe failure percentage as a whole number.\n"
  remarks: "\nIn the <xref href=\"NHystrix.HystrixCircuitBreaker\" data-throw-if-not-resolved=\"false\"></xref>, this is the value\ncompared to the <xref href=\"NHystrix.CircuitBreakerOptions.CircuitBreakerErrorThresholdPercentage\" data-throw-if-not-resolved=\"false\"></xref>\nto determine if the circuit breaker should be tripped.\n"
  example: []
  syntax:
    content: public int FailurePercentage { get; }
    parameters: []
    return:
      type: System.Int32
      description: The failure percentage as a whole number.
    content.vb: Public ReadOnly Property FailurePercentage As Integer
  overload: NHystrix.HealthCounts.FailurePercentage*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NHystrix
  commentId: N:NHystrix
  isExternal: false
  name: NHystrix
  nameWithType: NHystrix
  fullName: NHystrix
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: NHystrix.HystrixCircuitBreaker
  commentId: T:NHystrix.HystrixCircuitBreaker
  isExternal: false
  name: HystrixCircuitBreaker
  nameWithType: HystrixCircuitBreaker
  fullName: NHystrix.HystrixCircuitBreaker
- uid: NHystrix.CircuitBreakerOptions.CircuitBreakerRequestVolumeThreshold
  commentId: P:NHystrix.CircuitBreakerOptions.CircuitBreakerRequestVolumeThreshold
- uid: NHystrix.HealthCounts.RequestCount*
  commentId: Overload:NHystrix.HealthCounts.RequestCount
  isExternal: false
  name: RequestCount
  nameWithType: HealthCounts.RequestCount
  fullName: NHystrix.HealthCounts.RequestCount
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: NHystrix.HealthCounts.FailedRequestCount*
  commentId: Overload:NHystrix.HealthCounts.FailedRequestCount
  isExternal: false
  name: FailedRequestCount
  nameWithType: HealthCounts.FailedRequestCount
  fullName: NHystrix.HealthCounts.FailedRequestCount
- uid: NHystrix.CircuitBreakerOptions.CircuitBreakerErrorThresholdPercentage
  commentId: P:NHystrix.CircuitBreakerOptions.CircuitBreakerErrorThresholdPercentage
- uid: NHystrix.HealthCounts.FailurePercentage*
  commentId: Overload:NHystrix.HealthCounts.FailurePercentage
  isExternal: false
  name: FailurePercentage
  nameWithType: HealthCounts.FailurePercentage
  fullName: NHystrix.HealthCounts.FailurePercentage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
