### YamlMime:ManagedReference
items:
- uid: NHystrix.Metric.HystrixCommandEvent
  commentId: T:NHystrix.Metric.HystrixCommandEvent
  id: HystrixCommandEvent
  parent: NHystrix.Metric
  children:
  - NHystrix.Metric.HystrixCommandEvent.#ctor(NHystrix.HystrixCommandKey,NHystrix.HystrixEventType,System.Exception)
  - NHystrix.Metric.HystrixCommandEvent.CommandKey
  - NHystrix.Metric.HystrixCommandEvent.EventType
  - NHystrix.Metric.HystrixCommandEvent.Exception
  langs:
  - csharp
  - vb
  name: HystrixCommandEvent
  nameWithType: HystrixCommandEvent
  fullName: NHystrix.Metric.HystrixCommandEvent
  type: Class
  source:
    remote:
      path: src/NHystrix/Metric/HystrixCommandEvent.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: HystrixCommandEvent
    path: ../src/NHystrix/Metric/HystrixCommandEvent.cs
    startLine: 10
  assemblies:
  - NHystrix
  namespace: NHystrix.Metric
  summary: "\nEncapsulates and event that occurred as a result of executing a <xref href=\"NHystrix.HystrixCommand%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class HystrixCommandEvent : IHystrixEvent'
    content.vb: >-
      Public Class HystrixCommandEvent
          Implements IHystrixEvent
  seealso:
  - linkId: NHystrix.Metric.IHystrixEvent
    commentId: T:NHystrix.Metric.IHystrixEvent
  inheritance:
  - System.Object
  implements:
  - NHystrix.Metric.IHystrixEvent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NHystrix.Metric.HystrixCommandEvent.#ctor(NHystrix.HystrixCommandKey,NHystrix.HystrixEventType,System.Exception)
  commentId: M:NHystrix.Metric.HystrixCommandEvent.#ctor(NHystrix.HystrixCommandKey,NHystrix.HystrixEventType,System.Exception)
  id: '#ctor(NHystrix.HystrixCommandKey,NHystrix.HystrixEventType,System.Exception)'
  parent: NHystrix.Metric.HystrixCommandEvent
  langs:
  - csharp
  - vb
  name: HystrixCommandEvent(HystrixCommandKey, HystrixEventType, Exception)
  nameWithType: HystrixCommandEvent.HystrixCommandEvent(HystrixCommandKey, HystrixEventType, Exception)
  fullName: NHystrix.Metric.HystrixCommandEvent.HystrixCommandEvent(NHystrix.HystrixCommandKey, NHystrix.HystrixEventType, System.Exception)
  type: Constructor
  source:
    remote:
      path: src/NHystrix/Metric/HystrixCommandEvent.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: .ctor
    path: ../src/NHystrix/Metric/HystrixCommandEvent.cs
    startLine: 18
  assemblies:
  - NHystrix
  namespace: NHystrix.Metric
  summary: "\nInitializes a new instance of the <xref href=\"NHystrix.Metric.HystrixCommandEvent\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public HystrixCommandEvent(HystrixCommandKey commandKey, HystrixEventType eventType, Exception exception = null)
    parameters:
    - id: commandKey
      type: NHystrix.HystrixCommandKey
      description: The command key.
    - id: eventType
      type: NHystrix.HystrixEventType
      description: Type of the event.
    - id: exception
      type: System.Exception
      description: The exception. (optional)
    content.vb: Public Sub New(commandKey As HystrixCommandKey, eventType As HystrixEventType, exception As Exception = Nothing)
  overload: NHystrix.Metric.HystrixCommandEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NHystrix.Metric.HystrixCommandEvent.CommandKey
  commentId: P:NHystrix.Metric.HystrixCommandEvent.CommandKey
  id: CommandKey
  parent: NHystrix.Metric.HystrixCommandEvent
  langs:
  - csharp
  - vb
  name: CommandKey
  nameWithType: HystrixCommandEvent.CommandKey
  fullName: NHystrix.Metric.HystrixCommandEvent.CommandKey
  type: Property
  source:
    remote:
      path: src/NHystrix/Metric/HystrixCommandEvent.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: CommandKey
    path: ../src/NHystrix/Metric/HystrixCommandEvent.cs
    startLine: 29
  assemblies:
  - NHystrix
  namespace: NHystrix.Metric
  summary: "\nGets the command key.\n"
  example: []
  syntax:
    content: public HystrixCommandKey CommandKey { get; }
    parameters: []
    return:
      type: NHystrix.HystrixCommandKey
      description: The command key.
    content.vb: Public ReadOnly Property CommandKey As HystrixCommandKey
  overload: NHystrix.Metric.HystrixCommandEvent.CommandKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NHystrix.Metric.HystrixCommandEvent.EventType
  commentId: P:NHystrix.Metric.HystrixCommandEvent.EventType
  id: EventType
  parent: NHystrix.Metric.HystrixCommandEvent
  langs:
  - csharp
  - vb
  name: EventType
  nameWithType: HystrixCommandEvent.EventType
  fullName: NHystrix.Metric.HystrixCommandEvent.EventType
  type: Property
  source:
    remote:
      path: src/NHystrix/Metric/HystrixCommandEvent.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: EventType
    path: ../src/NHystrix/Metric/HystrixCommandEvent.cs
    startLine: 35
  assemblies:
  - NHystrix
  namespace: NHystrix.Metric
  summary: "\nGets the type of the event.\n"
  example: []
  syntax:
    content: public HystrixEventType EventType { get; }
    parameters: []
    return:
      type: NHystrix.HystrixEventType
      description: The type of the event.
    content.vb: Public ReadOnly Property EventType As HystrixEventType
  overload: NHystrix.Metric.HystrixCommandEvent.EventType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: NHystrix.Metric.HystrixCommandEvent.Exception
  commentId: P:NHystrix.Metric.HystrixCommandEvent.Exception
  id: Exception
  parent: NHystrix.Metric.HystrixCommandEvent
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: HystrixCommandEvent.Exception
  fullName: NHystrix.Metric.HystrixCommandEvent.Exception
  type: Property
  source:
    remote:
      path: src/NHystrix/Metric/HystrixCommandEvent.cs
      branch: master
      repo: https://github.com/milestonetg/NHystrix.git
    id: Exception
    path: ../src/NHystrix/Metric/HystrixCommandEvent.cs
    startLine: 41
  assemblies:
  - NHystrix
  namespace: NHystrix.Metric
  summary: "\nGets the exception.\n"
  example: []
  syntax:
    content: public Exception Exception { get; }
    parameters: []
    return:
      type: System.Exception
      description: The exception. Null if no exception occurred.
    content.vb: Public ReadOnly Property Exception As Exception
  overload: NHystrix.Metric.HystrixCommandEvent.Exception*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: NHystrix.HystrixCommand`2
  commentId: T:NHystrix.HystrixCommand`2
  isExternal: false
  name: HystrixCommand<TRequest, TResult>
  nameWithType: HystrixCommand<TRequest, TResult>
  fullName: NHystrix.HystrixCommand<TRequest, TResult>
  nameWithType.vb: HystrixCommand(Of TRequest, TResult)
  fullName.vb: NHystrix.HystrixCommand(Of TRequest, TResult)
  name.vb: HystrixCommand(Of TRequest, TResult)
  spec.csharp:
  - uid: NHystrix.HystrixCommand`2
    name: HystrixCommand
    nameWithType: HystrixCommand
    fullName: NHystrix.HystrixCommand
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: NHystrix.HystrixCommand`2
    name: HystrixCommand
    nameWithType: HystrixCommand
    fullName: NHystrix.HystrixCommand
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: NHystrix.Metric.IHystrixEvent
  commentId: T:NHystrix.Metric.IHystrixEvent
  parent: NHystrix.Metric
  isExternal: false
  name: IHystrixEvent
  nameWithType: IHystrixEvent
  fullName: NHystrix.Metric.IHystrixEvent
- uid: NHystrix.Metric
  commentId: N:NHystrix.Metric
  isExternal: false
  name: NHystrix.Metric
  nameWithType: NHystrix.Metric
  fullName: NHystrix.Metric
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: NHystrix.Metric.HystrixCommandEvent
  commentId: T:NHystrix.Metric.HystrixCommandEvent
  isExternal: false
  name: HystrixCommandEvent
  nameWithType: HystrixCommandEvent
  fullName: NHystrix.Metric.HystrixCommandEvent
- uid: NHystrix.Metric.HystrixCommandEvent.#ctor*
  commentId: Overload:NHystrix.Metric.HystrixCommandEvent.#ctor
  isExternal: false
  name: HystrixCommandEvent
  nameWithType: HystrixCommandEvent.HystrixCommandEvent
  fullName: NHystrix.Metric.HystrixCommandEvent.HystrixCommandEvent
- uid: NHystrix.HystrixCommandKey
  commentId: T:NHystrix.HystrixCommandKey
  parent: NHystrix
  isExternal: false
  name: HystrixCommandKey
  nameWithType: HystrixCommandKey
  fullName: NHystrix.HystrixCommandKey
- uid: NHystrix.HystrixEventType
  commentId: T:NHystrix.HystrixEventType
  parent: NHystrix
  isExternal: false
  name: HystrixEventType
  nameWithType: HystrixEventType
  fullName: NHystrix.HystrixEventType
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: NHystrix
  commentId: N:NHystrix
  isExternal: false
  name: NHystrix
  nameWithType: NHystrix
  fullName: NHystrix
- uid: NHystrix.Metric.HystrixCommandEvent.CommandKey*
  commentId: Overload:NHystrix.Metric.HystrixCommandEvent.CommandKey
  isExternal: false
  name: CommandKey
  nameWithType: HystrixCommandEvent.CommandKey
  fullName: NHystrix.Metric.HystrixCommandEvent.CommandKey
- uid: NHystrix.Metric.HystrixCommandEvent.EventType*
  commentId: Overload:NHystrix.Metric.HystrixCommandEvent.EventType
  isExternal: false
  name: EventType
  nameWithType: HystrixCommandEvent.EventType
  fullName: NHystrix.Metric.HystrixCommandEvent.EventType
- uid: NHystrix.Metric.HystrixCommandEvent.Exception*
  commentId: Overload:NHystrix.Metric.HystrixCommandEvent.Exception
  isExternal: false
  name: Exception
  nameWithType: HystrixCommandEvent.Exception
  fullName: NHystrix.Metric.HystrixCommandEvent.Exception
